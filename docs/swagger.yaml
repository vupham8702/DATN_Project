definitions:
  model.CVTemplate:
    properties:
      category:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      description:
        type: string
      download_count:
        type: integer
      file_path:
        type: string
      file_type:
        description: docx, xlsx
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      name:
        type: string
      tags:
        type: string
      thumbnail_path:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  model.JobApplication:
    properties:
      cover_letter:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      id:
        type: integer
      is_deleted:
        type: boolean
      notes:
        type: string
      post_job_id:
        type: integer
      resume:
        type: string
      status:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    required:
    - post_job_id
    - resume
    type: object
  model.Permission:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_checked:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      parent_id:
        type: integer
      priority:
        type: integer
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  model.PostJob:
    properties:
      applications_count:
        type: integer
      company:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      description:
        type: string
      experience:
        type: string
      gender:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      logo:
        type: string
      requirements:
        type: string
      salary:
        type: string
      status:
        type: string
      time_frame:
        description: ví dụ "01/05/2025 - 01/06/2025"
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    required:
    - description
    - title
    type: object
  model.Role:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      updated_at:
        type: string
      updated_by:
        type: integer
      users:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.User:
    properties:
      age:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      is_locked:
        type: boolean
      is_supper:
        type: boolean
      password:
        description: Phone     string `json:"phone"`
        type: string
      providers:
        items:
          $ref: '#/definitions/model.UserProvider'
        type: array
      roles:
        description: |-
          Avatar    string `json:"avatar"`
          ResourceID   *uint           `json:"resource_id"`
          Resource     *Resource       `json:"resource"`
        items:
          $ref: '#/definitions/model.Role'
        type: array
      updated_at:
        type: string
      updated_by:
        type: integer
      username:
        type: string
    type: object
  model.UserProvider:
    properties:
      accountInfo:
        items:
          type: integer
        type: array
      approval_note:
        description: Note from admin
        type: string
      approved_by:
        description: ID of admin who approved
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      email:
        type: string
      gorm:not null:
        type: integer
      id:
        type: integer
      is_approved:
        description: For employer accounts
        type: boolean
      is_deleted:
        type: boolean
      provider:
        type: string
      provider_identify:
        type: string
      received_noti:
        type: boolean
      updated_at:
        type: string
      updated_by:
        type: integer
      user:
        $ref: '#/definitions/model.User'
      user_type:
        type: string
    type: object
  payload.ApproveEmployer:
    properties:
      note:
        type: string
      status:
        description: '"approved" or "rejected"'
        type: string
      userId:
        type: integer
    required:
    - status
    - userId
    type: object
  payload.RoleDto:
    properties:
      code:
        type: string
      count_user:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      resource_id:
        type: integer
      users:
        items:
          $ref: '#/definitions/payload.UserDto'
        type: array
    type: object
  payload.UserDto:
    properties:
      avatar:
        description: ResourceId *uint         `json:"resource_id"`
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_locked:
        type: boolean
      is_supper:
        description: Status     int           `json:"status" `
        type: boolean
      last_name:
        type: string
      phone:
        type: string
      providers:
        items:
          $ref: '#/definitions/response.UserProviderResponse'
        type: array
      received_noti:
        type: boolean
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      username:
        type: string
    required:
    - email
    - username
    type: object
  payload.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  payload.UserRegister:
    properties:
      email:
        type: string
      fullName:
        type: string
      password:
        minLength: 8
        type: string
      roles:
        items:
          $ref: '#/definitions/payload.RoleDto'
        type: array
      userType:
        description: '"jobseeker" or "employer"'
        type: string
    required:
    - email
    - fullName
    - password
    - userType
    type: object
  request.DeleteProfileRequest:
    properties:
      id:
        type: integer
    type: object
  request.EmployerProfileRequest:
    properties:
      about:
        type: string
      address:
        type: string
      benefits:
        items:
          type: string
        type: array
      business_license:
        type: string
      city:
        type: string
      company_name:
        type: string
      company_size:
        type: string
      contact_person_name:
        type: string
      contact_person_role:
        type: string
      country:
        type: string
      culture:
        items:
          type: string
        type: array
      email:
        type: string
      facebook_url:
        type: string
      founded:
        type: integer
      industry:
        type: string
      linkedin_url:
        type: string
      mission:
        type: string
      phone_number:
        type: string
      tax_code:
        type: string
      twitter_url:
        type: string
      website:
        type: string
    type: object
  request.JobseekerProfileRequest:
    properties:
      about:
        type: string
      address:
        type: string
      availability:
        type: string
      certifications:
        items:
          properties:
            credential_id:
              type: string
            expiry_date:
              type: string
            issue_date:
              type: string
            name:
              type: string
            organisation:
              type: string
            url:
              type: string
          type: object
        type: array
      city:
        type: string
      country:
        type: string
      date_of_birth:
        type: string
      education:
        items:
          properties:
            currently_here:
              type: boolean
            degree:
              type: string
            description:
              type: string
            end_date:
              type: string
            field:
              type: string
            institution:
              type: string
            start_date:
              type: string
          type: object
        type: array
      experience:
        items:
          properties:
            company:
              type: string
            currently_here:
              type: boolean
            description:
              type: string
            end_date:
              type: string
            position:
              type: string
            start_date:
              type: string
          type: object
        type: array
      gender:
        type: string
      github_profile:
        type: string
      languages:
        items:
          properties:
            language:
              type: string
            level:
              description: '"beginner", "intermediate", "advanced", "native"'
              type: string
          type: object
        type: array
      linkedin_profile:
        type: string
      phone_number:
        type: string
      profile_title:
        type: string
      skills:
        type: string
      website_url:
        type: string
    type: object
  response.UserProviderResponse:
    properties:
      provider:
        description: UserID           uint   `json:"user_id"`
        type: string
      provider_identify:
        type: string
      user_type:
        description: AppleId          string `json:"apple_id"`
        type: string
    type: object
  response.VResponse:
    properties:
      code: {}
      data: {}
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /datn_backend/admin/post-job/{id}/status:
    put:
      consumes:
      - application/json
      description: Cập nhật trạng thái của một bài đăng tuyển dụng (dành cho admin)
      parameters:
      - description: Job Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status Payload
        in: body
        name: status
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Cập nhật trạng thái bài đăng tuyển dụng
      tags:
      - Admin
  /datn_backend/cv/admin/templates:
    post:
      consumes:
      - multipart/form-data
      description: Tải lên file mẫu CV mới
      parameters:
      - description: CV Template file (.docx, .xlsx)
        in: formData
        name: template_file
        required: true
        type: file
      - description: Template name
        in: formData
        name: name
        required: true
        type: string
      - description: Template description
        in: formData
        name: description
        type: string
      - description: Template category
        in: formData
        name: category
        type: string
      - description: Template tags
        in: formData
        name: tags
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.CVTemplate'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Tạo mẫu CV mới
      tags:
      - Admin
  /datn_backend/cv/admin/templates/{id}:
    delete:
      consumes:
      - application/json
      description: Xóa mẫu CV
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Xóa mẫu CV
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Cập nhật thông tin mẫu CV
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      - description: Template info
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/model.CVTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.CVTemplate'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Cập nhật mẫu CV
      tags:
      - Admin
  /datn_backend/cv/admin/templates/{id}/download-original:
    get:
      consumes:
      - application/json
      description: Tải xuống file mẫu CV gốc (không điền thông tin)
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: CV Template file
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Tải xuống mẫu CV gốc
      tags:
      - Admin
  /datn_backend/cv/admin/templates/{id}/thumbnail:
    post:
      consumes:
      - multipart/form-data
      description: Tải lên hoặc cập nhật thumbnail cho mẫu CV
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      - description: Thumbnail file (.jpg, .jpeg, .png, .gif)
        in: formData
        name: thumbnail_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.CVTemplate'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Tải lên thumbnail cho mẫu CV
      tags:
      - Admin
  /datn_backend/cv/templates:
    get:
      consumes:
      - application/json
      description: Lấy danh sách tất cả các mẫu CV
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.CVTemplate'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Lấy tất cả mẫu CV
      tags:
      - CV
  /datn_backend/cv/templates/{id}:
    get:
      consumes:
      - application/json
      description: Lấy thông tin chi tiết của mẫu CV theo ID
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.CVTemplate'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Lấy mẫu CV theo ID
      tags:
      - CV
  /datn_backend/cv/templates/{id}/download:
    get:
      consumes:
      - application/json
      description: Tải xuống file mẫu CV với thông tin cá nhân được điền vào
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: CV Template file with personal info
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Tải xuống mẫu CV với thông tin cá nhân
      tags:
      - CV
  /datn_backend/cv/templates/{id}/preview:
    get:
      consumes:
      - application/json
      description: Xem trước hình ảnh thumbnail của mẫu CV
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - image/jpeg
      responses:
        "200":
          description: CV Template thumbnail
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Xem trước mẫu CV
      tags:
      - CV
  /datn_backend/post-job:
    get:
      consumes:
      - application/json
      description: Lấy danh sách tất cả các bài đăng tuyển dụng với phân trang
      parameters:
      - description: 'Số trang (mặc định: 1)'
        in: query
        name: page
        type: integer
      - description: 'Số lượng mỗi trang (mặc định: 10)'
        in: query
        name: size
        type: integer
      - description: Lọc theo trạng thái (pending, approved, rejected)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Lấy danh sách bài đăng tuyển dụng
      tags:
      - JobPost
  /datn_backend/post-job/{id}:
    delete:
      consumes:
      - application/json
      description: Xóa một bài đăng tuyển dụng (xóa mềm)
      parameters:
      - description: Job Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Xóa bài đăng tuyển dụng
      tags:
      - JobPost
    get:
      consumes:
      - application/json
      description: Lấy thông tin chi tiết của một bài đăng tuyển dụng theo ID
      parameters:
      - description: Job Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.PostJob'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Lấy thông tin chi tiết bài đăng tuyển dụng
      tags:
      - JobPost
    put:
      consumes:
      - application/json
      description: Cập nhật thông tin của một bài đăng tuyển dụng
      parameters:
      - description: Job Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Job Post Payload với start_date và end_date (YYYY-MM-DD)
        in: body
        name: payload
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.PostJob'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Cập nhật bài đăng tuyển dụng
      tags:
      - JobPost
  /datn_backend/post-job/{id}/applications:
    get:
      consumes:
      - application/json
      description: Lấy danh sách các ứng viên đã ứng tuyển vào bài đăng của nhà tuyển
        dụng
      parameters:
      - description: Post Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.JobApplication'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Lấy danh sách ứng viên cho bài đăng
      tags:
      - JobApplication
  /datn_backend/post-job/applications/{id}/status:
    put:
      consumes:
      - application/json
      description: Nhà tuyển dụng cập nhật trạng thái ứng tuyển của ứng viên
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status (pending, reviewing, accepted, rejected)
        in: body
        name: status
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Cập nhật trạng thái ứng tuyển
      tags:
      - JobApplication
  /datn_backend/post-job/apply/{id}:
    post:
      consumes:
      - multipart/form-data
      description: Người tìm việc gửi file CV và thư xin việc
      parameters:
      - description: Job Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: File CV (.pdf|.docx)
        in: formData
        name: resume_file
        required: true
        type: file
      - description: Cover letter
        in: formData
        name: cover_letter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.VResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Ứng tuyển vào bài đăng tuyển dụng
      tags:
      - JobSeeker
  /datn_backend/post-job/create:
    post:
      consumes:
      - application/json
      description: Đăng bài tuyển dụng (chờ duyệt bởi Admin)
      parameters:
      - description: Job Post Payload với start_date và end_date (YYYY-MM-DD)
        in: body
        name: payload
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.PostJob'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Tạo mới bài đăng tuyển dụng
      tags:
      - JobPost
  /datn_backend/post-job/my-applications:
    get:
      consumes:
      - application/json
      description: Lấy danh sách các công việc mà người dùng đã ứng tuyển
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.VResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.JobApplication'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Lấy danh sách ứng tuyển của tôi
      tags:
      - JobApplication
  /datn_backend/post-job/my-post:
    get:
      consumes:
      - application/json
      description: Lấy danh sách các bài đăng tuyển dụng của người dùng hiện tại
      parameters:
      - description: 'Số trang (mặc định: 1)'
        in: query
        name: page
        type: integer
      - description: 'Số lượng mỗi trang (mặc định: 10)'
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.VResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Lấy danh sách bài đăng tuyển dụng của tôi
      tags:
      - JobPost
  /datn_backend/profile:
    get:
      consumes:
      - application/json
      description: Lấy thông tin hồ sơ của người dùng đang đăng nhập
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Lấy thông tin hồ sơ người dùng hiện tại
      tags:
      - ProfileController
  /datn_backend/profile/delete:
    put:
      consumes:
      - application/json
      description: Xóa thông tin hồ sơ
      parameters:
      - description: Xóa hồ sơ
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/request.DeleteProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Delete Profile
      tags:
      - ProfileController
  /datn_backend/profile/employer:
    put:
      consumes:
      - application/json
      description: Cập nhật thông tin hồ sơ của nhà tuyển dụng
      parameters:
      - description: Thông tin hồ sơ nhà tuyển dụng
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/request.EmployerProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Cập nhật hồ sơ nhà tuyển dụng
      tags:
      - ProfileController
  /datn_backend/profile/employer/{id}:
    get:
      consumes:
      - application/json
      description: Lấy thông tin hồ sơ công khai của nhà tuyển dụng theo ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Lấy thông tin hồ sơ công khai của nhà tuyển dụng
      tags:
      - ProfileController
  /datn_backend/profile/jobseeker:
    put:
      consumes:
      - application/json
      description: Cập nhật thông tin hồ sơ của ứng viên
      parameters:
      - description: Thông tin hồ sơ ứng viên
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/request.JobseekerProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Cập nhật hồ sơ ứng viên
      tags:
      - ProfileController
  /datn_backend/profile/jobseeker/{id}:
    get:
      consumes:
      - application/json
      description: Lấy thông tin hồ sơ công khai của ứng viên theo ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Lấy thông tin hồ sơ công khai của ứng viên
      tags:
      - ProfileController
  /datn_backend/profile/upload-photo:
    post:
      consumes:
      - multipart/form-data
      description: Upload ảnh đại diện, CV, logo công ty hoặc banner công ty
      parameters:
      - description: Loại ảnh (profile, resume, company_logo, company_banner)
        in: formData
        name: photoType
        required: true
        type: string
      - description: File ảnh cần upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Upload ảnh cho hồ sơ
      tags:
      - ProfileController
  /datn_backend/security/approve-employer:
    post:
      consumes:
      - application/json
      description: Admin can approve or reject employer account registrations
      parameters:
      - description: Approval data
        in: body
        name: ApproveEmployer
        required: true
        schema:
          $ref: '#/definitions/payload.ApproveEmployer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Approve or reject an employer account
      tags:
      - AdminController
  /datn_backend/security/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User credentials
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/payload.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Login
      tags:
      - SecurityController
  /datn_backend/security/pending-employers:
    get:
      consumes:
      - application/json
      description: Admin can view all employer accounts waiting for approval
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      security:
      - BearerAuth: []
      summary: Get a list of employers pending approval
      tags:
      - AdminController
  /datn_backend/security/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, password and full name
      parameters:
      - description: User registration data
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/payload.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VResponse'
      summary: Register a new user
      tags:
      - SecurityController
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
